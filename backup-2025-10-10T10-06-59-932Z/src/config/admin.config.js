/**
 * AdminJS v7 Configuration with ESM
 * C·∫•u h√¨nh AdminJS v7+ theo t√†i li·ªáu ch√≠nh th·ª©c v·ªõi ESM support
 */

import AdminJS, { ComponentLoader } from 'adminjs';
// Import Sequelize adapter cho AdminJS v7+
import * as AdminJSSequelize from '@adminjs/sequelize';

// ƒêƒÉng k√Ω adapter tr∆∞·ªõc khi s·ª≠ d·ª•ng
AdminJS.registerAdapter({
  Database: AdminJSSequelize.Database,
  Resource: AdminJSSequelize.Resource,
});

// Import resources
import StudentResource from '../resources/student.resource.js';
import UserResource from '../resources/user.resource.js';
import ClassResource from '../resources/class.resource.js';
import TeacherResource from '../resources/teacher.resource.js';
import SubjectResource from '../resources/subject.resource.js';
import ClassSubjectResource from '../resources/class-subject.resource.js';
import GradeResource from '../resources/grade-simple.resource.js';

/**
 * Create AdminJS v7 instance v·ªõi ComponentLoader v√† localization v7
 */
export const createAdminJSConfig = () => {
  // Create ComponentLoader instance (required in v7)
  const componentLoader = new ComponentLoader();

  return new AdminJS({
    componentLoader,
    resources: [
      UserResource,
      StudentResource,
      ClassResource,
      TeacherResource, 
      SubjectResource,
      ClassSubjectResource,
      GradeResource,
      //gradeHistoryResource,
      //NotificationResource
    ],
    
    rootPath: '/admin',
    branding: {
      companyName: 'üéì H·ªá th·ªëng Qu·∫£n l√Ω ƒêi·ªÉm Sinh vi√™n',
      softwareBrothers: false,
      logo: false
    },
    
    // ƒê·ªãnh nghƒ©a navigation structure
    navigation: {
      'quan-ly-he-thong': {
        name: 'Qu·∫£n l√Ω H·ªá th·ªëng',
        icon: 'Settings'
      },
      'quan-ly-sinh-vien': {
        name: 'Qu·∫£n l√Ω Sinh vi√™n',
        icon: 'User' 
      },
      'quan-ly-giao-vien': {
        name: 'Qu·∫£n l√Ω Gi√°o vi√™n',
        icon: 'User'
      },
      'quan-ly-lop-hoc': {
        name: 'Qu·∫£n l√Ω L·ªõp h·ªçc',
        icon: 'Home'
      },
      'quan-ly-mon-hoc': {
        name: 'Qu·∫£n l√Ω M√¥n h·ªçc', 
        icon: 'Book'
      },
      'quan-ly-diem-so': {
        name: 'Qu·∫£n l√Ω ƒêi·ªÉm s·ªë',
        icon: 'Edit'
      }
    },
    locale: {
      language: 'vi',
      availableLanguages: ['vi'], // only Vietnamese: hide language selector
      localeDetection: false,
      translations: {
        vi: {
          labels: {
            navigation: {
              'quan-ly-he-thong': 'Qu·∫£n l√Ω H·ªá th·ªëng',
              'quan-ly-sinh-vien': 'Qu·∫£n l√Ω Sinh vi√™n', 
              'quan-ly-giao-vien': 'Qu·∫£n l√Ω Gi√°o vi√™n',
              'quan-ly-lop-hoc': 'Qu·∫£n l√Ω L·ªõp h·ªçc',
              'quan-ly-mon-hoc': 'Qu·∫£n l√Ω M√¥n h·ªçc',
              'quan-ly-diem-so': 'Qu·∫£n l√Ω ƒêi·ªÉm s·ªë',
              'bao-cao-thong-ke': 'B√°o c√°o & Th·ªëng k√™'
            }
          },
          resources: {
            'User': 'Ng∆∞·ªùi d√πng',
            'Student': 'Sinh vi√™n', 
            'Teacher': 'Gi√°o vi√™n',
            'Class': 'L·ªõp h·ªçc',
            'Subject': 'M√¥n h·ªçc',
            'ClassSubject': 'L·ªãch h·ªçc',
            'Grade': 'ƒêi·ªÉm s·ªë'
          },
          properties: {
            // User properties
            id: 'ID',
            username: 'T√™n ƒëƒÉng nh·∫≠p',
            email: 'Email',
            fullName: 'H·ªç v√† t√™n',
            role: 'Vai tr√≤',
            classSubjects: 'L·ªõp-M√¥n h·ªçc',
            status: 'Tr·∫°ng th√°i',
            lastLogin: 'ƒêƒÉng nh·∫≠p cu·ªëi',
            createdAt: 'Ng√†y t·∫°o',
            updatedAt: 'Ng√†y c·∫≠p nh·∫≠t',
            // Student properties
            studentCode: 'M√£ sinh vi√™n',
            classId: 'L·ªõp h·ªçc',
            gender: 'Gi·ªõi t√≠nh',
            dateOfBirth: 'Ng√†y sinh',
            phone: 'S·ªë ƒëi·ªán tho·∫°i',
            // Class properties
            classCode: 'M√£ l·ªõp',
            className: 'T√™n l·ªõp',
            // Subject properties
            subjectCode: 'M√£ m√¥n h·ªçc',
            subjectName: 'T√™n m√¥n h·ªçc',
            credits: 'S·ªë t√≠n ch·ªâ',
            // Grade properties
            semester: 'H·ªçc k·ª≥',
            academicYear: 'NƒÉm h·ªçc',
            txScore: 'ƒêi·ªÉm TX',
            dkScore: 'ƒêi·ªÉm ƒêK',
            finalScore: 'ƒêi·ªÉm thi cu·ªëi k·ª≥',
            tbktScore: 'ƒêi·ªÉm TBKT',
            tbmhScore: 'ƒêi·ªÉm TBMH',
            letterGrade: 'ƒêi·ªÉm ch·ªØ',
            isPassed: 'K·∫øt qu·∫£'
          },
          labels: {
            dashboard: 'Trang ch·ªß',
            loginWelcome: 'Ch√†o m·ª´ng ƒë·∫øn v·ªõi AdminJS'
          },
          buttons: {
            save: 'L∆∞u',
            cancel: 'H·ªßy',
            delete: 'X√≥a',
            edit: 'S·ª≠a',
            show: 'Xem',
            create: 'T·∫°o m·ªõi',
            filter: 'L·ªçc'
          },
          messages: {
            successfullyCreated: 'T·∫°o m·ªõi th√†nh c√¥ng',
            successfullyUpdated: 'C·∫≠p nh·∫≠t th√†nh c√¥ng',
            successfullyDeleted: 'X√≥a th√†nh c√¥ng'
          }
        },
        en: {
          properties: {
            id: 'ID',
            username: 'Username',
            email: 'Email',
            fullName: 'Full Name',
            role: 'Role',
            status: 'Status',
            lastLogin: 'Last Login',
            createdAt: 'Created At',
            updatedAt: 'Updated At',
            studentCode: 'Student Code',
            classId: 'Class',
            gender: 'Gender',
            dateOfBirth: 'Date of Birth',
            phone: 'Phone',
            classCode: 'Class Code',
            className: 'Class Name',
            subjectCode: 'Subject Code',
            subjectName: 'Subject Name',
            credits: 'Credits',
            semester: 'Semester',
            academicYear: 'Academic Year',
            txScore: 'TX Score',
            dkScore: 'DK Score',
            finalScore: 'Final Score',
            tbktScore: 'TBKT Score',
            tbmhScore: 'TBMH Score',
            letterGrade: 'Letter Grade',
            isPassed: 'Passed'
          }
        }
      }
    }
  });
};

export default { createAdminJSConfig };
